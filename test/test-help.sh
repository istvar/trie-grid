#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Trie-Grid.
# 
# Trie-Grid is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Trie-Grid is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Trie-Grid.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ gen-test -T help
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L help.old <(echo \
'$ test -x ./trie
$ print() { printf '\''%s\n'\'' "$@"; }
$ ./trie --help
usage: trie [OPTION]...
where the options are:
  -L|--load-only       action: only load input and nothing more
  -S|--sort-only       action: only sort input and print it out
  -G|--gen-trie        action: fully process input (load it, sort it if needed),
                         than generate the respective trie on stdout (default)
  -C|--check-sorted    check that input is sorted properly
  -s|--sorted          sort type: input is sorted but not uniquely
  -u|--unique          sort type: input is sorted uniquely
  -U|--unsorted        sort type: input is not sorted (default)
     --quick3way       sort algorithm: use '\''quick3way'\'' algorithm (default)
     --stdc++          sort algorithm: use standard C++ library algorithm
  -c|--compact         gen type: generate compact trie on output
  -w|--wide            gen type: generate wide trie on output (default)
     --c++iostreams    input lib: use C++ I/O Streams library (default)
     --cstdio          input lib: use C Standard I/O library
     --append-grid     input algorithm: use '\''append-grid'\'' algorithm (default)
     --grow-grid       input algorithm: use '\''grow-grid'\'' algorithm
     --[no-]sync-with-stdio
                       keep C++ streams in sync with C streams or
                         otherwise do not (default not)
     --timings [TYPE]  print out on stderr the real/user/system times
                         spent executing the main inner tasks if TYPE is
                         given as '\''ctime'\'' or '\''utime'\''; '\''ctime'\'' uses '\''times'\''
                         library call, while '\''utime'\'' uses '\''gettimeofday'\''
                         and '\''getrusage'\'' tandem; when the arg is ommited
                         use '\''ctime'\''; default is '\''none'\''
     --utime-prec NUM  when printing out timings of type '\''utime'\'', compute
                         the fractional parts with the given precision
                         (valid range: 3-6; default: 3)
     --grid-size NUM   use NUM as the initial size of the grid buffer;
                         the default value is 1024
     --buf-size NUM    use NUM as the initial size of the input buffer;
                         the default value is 1024
  -q|--[no-]quote      when sorting only, print out quoted strings
                         or otherwise do not (default not)
  -D|--[no-]dots       put indenting dots in structure print outs
                         or otherwise do not (default not)
  -d|--[no-]debug      print some debugging output or otherwise
                         do not print debugging output at all (default)
     --[no-]dump-backtrace
                       print out the backtrace of the program on fatal error
                         or otherwise do not (default not)
     --dump-env[iron]-vars
                       print environment vars and exit
     --dump-options    print options and exit
  -v|--version         print version numbers and exit
  -?|--help            display this help info and exit
$ env -i ./trie --dump-opt
action:          gen-trie
input-lib:       c++iostreams
input-algorithm: append-grid
sync-with-stdio: no
sort-algorithm:  quick3way
check-sorted:    no
sort-type:       unsorted
gen-type:        wide
grid-size:       1024
buf-size:        1024
timings:         none
utime-prec:      3
quote:           no
dots:            no
debug:           no
dump-backtrace:  no
argc:            0
$ env -i ./trie --dump-env
TRIE_INPUT_LIB:  -
TRIE_INPUT_ALGO: -
TRIE_SORT_ALGO:  -
TRIE_TIMINGS:    -
TRIE_UTIME_PREC: -
TRIE_GRID_SIZE:  -
TRIE_BUF_SIZE:   -
TRIE_DUMP_BACKTRACE:
                 -
$ TRIE_INPUT_LIB=cstdio TRIE_INPUT_ALGO=grow-grid TRIE_SORT_ALGO=stdc++ TRIE_TIMINGS=utime TRIE_UTIME_PREC=6 TRIE_GRID_SIZE=2048 TRIE_BUF_SIZE=4096 TRIE_DUMP_BACKTRACE=yes ./trie --dump-env --dump-opt
TRIE_INPUT_LIB:  cstdio
TRIE_INPUT_ALGO: grow-grid
TRIE_SORT_ALGO:  stdc++
TRIE_TIMINGS:    utime
TRIE_UTIME_PREC: 6
TRIE_GRID_SIZE:  2048
TRIE_BUF_SIZE:   4096
TRIE_DUMP_BACKTRACE:
                 yes
action:          gen-trie
input-lib:       cstdio
input-algorithm: grow-grid
sync-with-stdio: no
sort-algorithm:  stdc++
check-sorted:    no
sort-type:       unsorted
gen-type:        wide
grid-size:       2048
buf-size:        4096
timings:         utime
utime-prec:      6
quote:           no
dots:            no
debug:           no
dump-backtrace:  yes
argc:            0
$ TRIE_INPUT_LIB=cstdio TRIE_INPUT_ALGO=grow-grid TRIE_SORT_ALGO=stdc++ TRIE_TIMINGS=utime TRIE_UTIME_PREC=6 TRIE_GRID_SIZE=2048 TRIE_BUF_SIZE=4096 TRIE_DUMP_BACKTRACE=yes ./trie --dump-env
TRIE_INPUT_LIB:  cstdio
TRIE_INPUT_ALGO: grow-grid
TRIE_SORT_ALGO:  stdc++
TRIE_TIMINGS:    utime
TRIE_UTIME_PREC: 6
TRIE_GRID_SIZE:  2048
TRIE_BUF_SIZE:   4096
TRIE_DUMP_BACKTRACE:
                 yes
$ TRIE_INPUT_LIB=foo TRIE_INPUT_ALGO=bar TRIE_SORT_ALGO=baz TRIE_TIMINGS=boo TRIE_UTIME_PREC=faz TRIE_GRID_SIZE=far TRIE_BUF_SIZE=baa TRIE_DUMP_BACKTRACE=faa ./trie --dump-env
trie: warning: ignoring invalid value of environment var TRIE_INPUT_LIB: "foo"
trie: warning: ignoring invalid value of environment var TRIE_INPUT_ALGO: "bar"
trie: warning: ignoring invalid value of environment var TRIE_SORT_ALGO: "baz"
trie: warning: ignoring invalid value of environment var TRIE_TIMINGS: "boo"
trie: warning: ignoring invalid value of environment var TRIE_UTIME_PREC: "faz"
trie: warning: ignoring invalid value of environment var TRIE_GRID_SIZE: "far"
trie: warning: ignoring invalid value of environment var TRIE_BUF_SIZE: "baa"
trie: warning: ignoring invalid value of environment var TRIE_DUMP_BACKTRACE: "faa"
TRIE_INPUT_LIB:  ?
TRIE_INPUT_ALGO: ?
TRIE_SORT_ALGO:  ?
TRIE_TIMINGS:    ?
TRIE_UTIME_PREC: ?
TRIE_GRID_SIZE:  ?
TRIE_BUF_SIZE:   ?
TRIE_DUMP_BACKTRACE:
                 ?'
) -L help.new <(
echo '$ test -x ./trie'
test -x ./trie 2>&1 ||
echo 'command failed: test -x ./trie'

echo '$ print() { printf '\''%s\n'\'' "$@"; }'
print() { printf '%s\n' "$@"; } 2>&1 ||
echo 'command failed: print() { printf '\''%s\n'\'' "$@"; }'

echo '$ ./trie --help'
./trie --help 2>&1 ||
echo 'command failed: ./trie --help'

echo '$ env -i ./trie --dump-opt'
env -i ./trie --dump-opt 2>&1 ||
echo 'command failed: env -i ./trie --dump-opt'

echo '$ env -i ./trie --dump-env'
env -i ./trie --dump-env 2>&1 ||
echo 'command failed: env -i ./trie --dump-env'

echo '$ TRIE_INPUT_LIB=cstdio TRIE_INPUT_ALGO=grow-grid TRIE_SORT_ALGO=stdc++ TRIE_TIMINGS=utime TRIE_UTIME_PREC=6 TRIE_GRID_SIZE=2048 TRIE_BUF_SIZE=4096 TRIE_DUMP_BACKTRACE=yes ./trie --dump-env --dump-opt'
TRIE_INPUT_LIB=cstdio TRIE_INPUT_ALGO=grow-grid TRIE_SORT_ALGO=stdc++ TRIE_TIMINGS=utime TRIE_UTIME_PREC=6 TRIE_GRID_SIZE=2048 TRIE_BUF_SIZE=4096 TRIE_DUMP_BACKTRACE=yes ./trie --dump-env --dump-opt 2>&1 ||
echo 'command failed: TRIE_INPUT_LIB=cstdio TRIE_INPUT_ALGO=grow-grid TRIE_SORT_ALGO=stdc++ TRIE_TIMINGS=utime TRIE_UTIME_PREC=6 TRIE_GRID_SIZE=2048 TRIE_BUF_SIZE=4096 TRIE_DUMP_BACKTRACE=yes ./trie --dump-env --dump-opt'

echo '$ TRIE_INPUT_LIB=cstdio TRIE_INPUT_ALGO=grow-grid TRIE_SORT_ALGO=stdc++ TRIE_TIMINGS=utime TRIE_UTIME_PREC=6 TRIE_GRID_SIZE=2048 TRIE_BUF_SIZE=4096 TRIE_DUMP_BACKTRACE=yes ./trie --dump-env'
TRIE_INPUT_LIB=cstdio TRIE_INPUT_ALGO=grow-grid TRIE_SORT_ALGO=stdc++ TRIE_TIMINGS=utime TRIE_UTIME_PREC=6 TRIE_GRID_SIZE=2048 TRIE_BUF_SIZE=4096 TRIE_DUMP_BACKTRACE=yes ./trie --dump-env 2>&1 ||
echo 'command failed: TRIE_INPUT_LIB=cstdio TRIE_INPUT_ALGO=grow-grid TRIE_SORT_ALGO=stdc++ TRIE_TIMINGS=utime TRIE_UTIME_PREC=6 TRIE_GRID_SIZE=2048 TRIE_BUF_SIZE=4096 TRIE_DUMP_BACKTRACE=yes ./trie --dump-env'

echo '$ TRIE_INPUT_LIB=foo TRIE_INPUT_ALGO=bar TRIE_SORT_ALGO=baz TRIE_TIMINGS=boo TRIE_UTIME_PREC=faz TRIE_GRID_SIZE=far TRIE_BUF_SIZE=baa TRIE_DUMP_BACKTRACE=faa ./trie --dump-env'
TRIE_INPUT_LIB=foo TRIE_INPUT_ALGO=bar TRIE_SORT_ALGO=baz TRIE_TIMINGS=boo TRIE_UTIME_PREC=faz TRIE_GRID_SIZE=far TRIE_BUF_SIZE=baa TRIE_DUMP_BACKTRACE=faa ./trie --dump-env 2>&1 ||
echo 'command failed: TRIE_INPUT_LIB=foo TRIE_INPUT_ALGO=bar TRIE_SORT_ALGO=baz TRIE_TIMINGS=boo TRIE_UTIME_PREC=faz TRIE_GRID_SIZE=far TRIE_BUF_SIZE=baa TRIE_DUMP_BACKTRACE=faa ./trie --dump-env'
)

