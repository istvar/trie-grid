#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Trie-Grid.
# 
# Trie-Grid is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Trie-Grid is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Trie-Grid.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ gen-test -T quoted
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L quoted.old <(echo \
'$ test -x ./trie
$ print() { printf '\''%s\n'\'' "$@"; }
$ ascii() { python -c $'\''\ns = ""\nfor i in range(256):\n\tif i in [ord("\\n")]:\n\t\ti = 0\n\ts += chr(i)\n\tif len(s) % 16 == 0:\n\t\tprint s\n\t\ts = ""\n'\''; }
$ trie() { ./trie -Sq; }
$ ascii|hexdump -ve '\''17/1 "%02x " "\n"'\''
00 01 02 03 04 05 06 07 08 09 00 0b 0c 0d 0e 0f 0a
10 11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 0a
20 21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 0a
30 31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f 0a
40 41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 0a
50 51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f 0a
60 61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 0a
70 71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f 0a
80 81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f 0a
90 91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f 0a
a0 a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af 0a
b0 b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf 0a
c0 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf 0a
d0 d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df 0a
e0 e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef 0a
f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff 0a
$ ascii|shuf|trie
\x0\x1\x2\x3\x4\x5\x6\x7\x8\t\x0\v\f\r\xe\xf
\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f
 !"#$%&\'\''()*+,-./
0123456789:;<=>?
@ABCDEFGHIJKLMNO
PQRSTUVWXYZ[\\]^_
`abcdefghijklmno
pqrstuvwxyz{|}~\x7f
\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f
\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f
\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf
\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf
\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf
\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf
\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef
\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff'
) -L quoted.new <(
echo '$ test -x ./trie'
test -x ./trie 2>&1 ||
echo 'command failed: test -x ./trie'

echo '$ print() { printf '\''%s\n'\'' "$@"; }'
print() { printf '%s\n' "$@"; } 2>&1 ||
echo 'command failed: print() { printf '\''%s\n'\'' "$@"; }'

echo '$ ascii() { python -c $'\''\ns = ""\nfor i in range(256):\n\tif i in [ord("\\n")]:\n\t\ti = 0\n\ts += chr(i)\n\tif len(s) % 16 == 0:\n\t\tprint s\n\t\ts = ""\n'\''; }'
ascii() { python -c $'\ns = ""\nfor i in range(256):\n\tif i in [ord("\\n")]:\n\t\ti = 0\n\ts += chr(i)\n\tif len(s) % 16 == 0:\n\t\tprint s\n\t\ts = ""\n'; } 2>&1 ||
echo 'command failed: ascii() { python -c $'\''\ns = ""\nfor i in range(256):\n\tif i in [ord("\\n")]:\n\t\ti = 0\n\ts += chr(i)\n\tif len(s) % 16 == 0:\n\t\tprint s\n\t\ts = ""\n'\''; }'

echo '$ trie() { ./trie -Sq; }'
trie() { ./trie -Sq; } 2>&1 ||
echo 'command failed: trie() { ./trie -Sq; }'

echo '$ ascii|hexdump -ve '\''17/1 "%02x " "\n"'\'''
ascii|hexdump -ve '17/1 "%02x " "\n"' 2>&1 ||
echo 'command failed: ascii|hexdump -ve '\''17/1 "%02x " "\n"'\'''

echo '$ ascii|shuf|trie'
ascii|shuf|trie 2>&1 ||
echo 'command failed: ascii|shuf|trie'
)

