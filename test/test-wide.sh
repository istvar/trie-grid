#!/bin/bash

# Copyright (C) 2016  Stefan Vargyas
# 
# This file is part of Trie-Grid.
# 
# Trie-Grid is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# Trie-Grid is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Trie-Grid.  If not, see <http://www.gnu.org/licenses/>.

#
# File generated by a command like:
# $ gen-test -T wide
#

[[ "$1" =~ ^-u[0-9]+$ ]] &&
u="${1:2}" ||
u=""

diff -u$u -L wide.old <(echo \
'$ test -x ./trie
$ print() { printf '\''%s\n'\'' "$@"; }
$ trie() { ./trie -U -w -D; }
$ print a|trie
{
.   '\''a'\'': "a"
}
$ print a a|trie
{
.   '\''a'\'': "a"
}
$ print a aa b|trie
{
.   '\''a'\'': "a" {
.   .   '\''a'\'': "aa"
.   }
.   '\''b'\'': "b"
}
$ print a ab|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'': "ab"
.   }
}
$ print a ab abc|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'': "ab" {
.   .   .   '\''c'\'': "abc"
.   .   }
.   }
}
$ print a ab abc abcd|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'': "ab" {
.   .   .   '\''c'\'': "abc" {
.   .   .   .   '\''d'\'': "abcd"
.   .   .   }
.   .   }
.   }
}
$ print a ab abc abcd abc$'\''\xfa'\''|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'': "ab" {
.   .   .   '\''c'\'': "abc" {
.   .   .   .   '\''d'\'': "abcd"
.   .   .   .   '\''\xfa'\'': "abc\xfa"
.   .   .   }
.   .   }
.   }
}
$ print a ab abc abd ac|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'': "ab" {
.   .   .   '\''c'\'': "abc"
.   .   .   '\''d'\'': "abd"
.   .   }
.   .   '\''c'\'': "ac"
.   }
}
$ print a ab ac|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'': "ab"
.   .   '\''c'\'': "ac"
.   }
}
$ print a ab ac acd|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'': "ab"
.   .   '\''c'\'': "ac" {
.   .   .   '\''d'\'': "acd"
.   .   }
.   }
}
$ print a ab ac ad|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'': "ab"
.   .   '\''c'\'': "ac"
.   .   '\''d'\'': "ad"
.   }
}
$ print a ab acd ace|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'': "ab"
.   .   '\''c'\'' {
.   .   .   '\''d'\'': "acd"
.   .   .   '\''e'\'': "ace"
.   .   }
.   }
}
$ print a ab b|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'': "ab"
.   }
.   '\''b'\'': "b"
}
$ print a abc abd ac|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc"
.   .   .   '\''d'\'': "abd"
.   .   }
.   .   '\''c'\'': "ac"
.   }
}
$ print a abcd abcdefg abcdxyz h hijk|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'' {
.   .   .   '\''c'\'' {
.   .   .   .   '\''d'\'': "abcd" {
.   .   .   .   .   '\''e'\'' {
.   .   .   .   .   .   '\''f'\'' {
.   .   .   .   .   .   .   '\''g'\'': "abcdefg"
.   .   .   .   .   .   }
.   .   .   .   .   }
.   .   .   .   .   '\''x'\'' {
.   .   .   .   .   .   '\''y'\'' {
.   .   .   .   .   .   .   '\''z'\'': "abcdxyz"
.   .   .   .   .   .   }
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   }
.   }
.   '\''h'\'': "h" {
.   .   '\''i'\'' {
.   .   .   '\''j'\'' {
.   .   .   .   '\''k'\'': "hijk"
.   .   .   }
.   .   }
.   }
}
$ print a abcd abcdefg abcdxyz h hijk hlm|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'' {
.   .   .   '\''c'\'' {
.   .   .   .   '\''d'\'': "abcd" {
.   .   .   .   .   '\''e'\'' {
.   .   .   .   .   .   '\''f'\'' {
.   .   .   .   .   .   .   '\''g'\'': "abcdefg"
.   .   .   .   .   .   }
.   .   .   .   .   }
.   .   .   .   .   '\''x'\'' {
.   .   .   .   .   .   '\''y'\'' {
.   .   .   .   .   .   .   '\''z'\'': "abcdxyz"
.   .   .   .   .   .   }
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   }
.   }
.   '\''h'\'': "h" {
.   .   '\''i'\'' {
.   .   .   '\''j'\'' {
.   .   .   .   '\''k'\'': "hijk"
.   .   .   }
.   .   }
.   .   '\''l'\'' {
.   .   .   '\''m'\'': "hlm"
.   .   }
.   }
}
$ print a abcd abcdefg h hijk|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'' {
.   .   .   '\''c'\'' {
.   .   .   .   '\''d'\'': "abcd" {
.   .   .   .   .   '\''e'\'' {
.   .   .   .   .   .   '\''f'\'' {
.   .   .   .   .   .   .   '\''g'\'': "abcdefg"
.   .   .   .   .   .   }
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   }
.   }
.   '\''h'\'': "h" {
.   .   '\''i'\'' {
.   .   .   '\''j'\'' {
.   .   .   .   '\''k'\'': "hijk"
.   .   .   }
.   .   }
.   }
}
$ print a abd ac|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'' {
.   .   .   '\''d'\'': "abd"
.   .   }
.   .   '\''c'\'': "ac"
.   }
}
$ print a b|trie
{
.   '\''a'\'': "a"
.   '\''b'\'': "b"
}
$ print a b abc bac abd|trie
{
.   '\''a'\'': "a" {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc"
.   .   .   '\''d'\'': "abd"
.   .   }
.   }
.   '\''b'\'': "b" {
.   .   '\''a'\'' {
.   .   .   '\''c'\'': "bac"
.   .   }
.   }
}
$ print a b bb|trie
{
.   '\''a'\'': "a"
.   '\''b'\'': "b" {
.   .   '\''b'\'': "bb"
.   }
}
$ print a b bb cc ccc ddd dddd|trie
{
.   '\''a'\'': "a"
.   '\''b'\'': "b" {
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''c'\'': "cc" {
.   .   .   '\''c'\'': "ccc"
.   .   }
.   }
.   '\''d'\'' {
.   .   '\''d'\'' {
.   .   .   '\''d'\'': "ddd" {
.   .   .   .   '\''d'\'': "dddd"
.   .   .   }
.   .   }
.   }
}
$ print a b c|trie
{
.   '\''a'\'': "a"
.   '\''b'\'': "b"
.   '\''c'\'': "c"
}
$ print a bb ba c|trie
{
.   '\''a'\'': "a"
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'': "c"
}
$ print a bb ba cc|trie
{
.   '\''a'\'': "a"
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''c'\'': "cc"
.   }
}
$ print a bb ba ccc|trie
{
.   '\''a'\'': "a"
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''c'\'' {
.   .   .   '\''c'\'': "ccc"
.   .   }
.   }
}
$ print a bb ba cde|trie
{
.   '\''a'\'': "a"
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'': "cde"
.   .   }
.   }
}
$ print a bb ba cdef|trie
{
.   '\''a'\'': "a"
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'' {
.   .   .   .   '\''f'\'': "cdef"
.   .   .   }
.   .   }
.   }
}
$ print a bb ba cdef cdefg|trie
{
.   '\''a'\'': "a"
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'' {
.   .   .   .   '\''f'\'': "cdef" {
.   .   .   .   .   '\''g'\'': "cdefg"
.   .   .   .   }
.   .   .   }
.   .   }
.   }
}
$ print a bb bac cdef|trie
{
.   '\''a'\'': "a"
.   '\''b'\'' {
.   .   '\''a'\'' {
.   .   .   '\''c'\'': "bac"
.   .   }
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'' {
.   .   .   .   '\''f'\'': "cdef"
.   .   .   }
.   .   }
.   }
}
$ print a bb ccc|trie
{
.   '\''a'\'': "a"
.   '\''b'\'' {
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''c'\'' {
.   .   .   '\''c'\'': "ccc"
.   .   }
.   }
}
$ print a bbx ba ccc|trie
{
.   '\''a'\'': "a"
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'' {
.   .   .   '\''x'\'': "bbx"
.   .   }
.   }
.   '\''c'\'' {
.   .   '\''c'\'' {
.   .   .   '\''c'\'': "ccc"
.   .   }
.   }
}
$ print a bbx bay ccc|trie
{
.   '\''a'\'': "a"
.   '\''b'\'' {
.   .   '\''a'\'' {
.   .   .   '\''y'\'': "bay"
.   .   }
.   .   '\''b'\'' {
.   .   .   '\''x'\'': "bbx"
.   .   }
.   }
.   '\''c'\'' {
.   .   '\''c'\'' {
.   .   .   '\''c'\'': "ccc"
.   .   }
.   }
}
$ print a cde cdef|trie
{
.   '\''a'\'': "a"
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'': "cde" {
.   .   .   .   '\''f'\'': "cdef"
.   .   .   }
.   .   }
.   }
}
$ print a cde cdef cdefg|trie
{
.   '\''a'\'': "a"
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'': "cde" {
.   .   .   .   '\''f'\'': "cdef" {
.   .   .   .   .   '\''g'\'': "cdefg"
.   .   .   .   }
.   .   .   }
.   .   }
.   }
}
$ print a cde cdef cdefgh|trie
{
.   '\''a'\'': "a"
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'': "cde" {
.   .   .   .   '\''f'\'': "cdef" {
.   .   .   .   .   '\''g'\'' {
.   .   .   .   .   .   '\''h'\'': "cdefgh"
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   }
.   }
}
$ print a cdef cdefg|trie
{
.   '\''a'\'': "a"
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'' {
.   .   .   .   '\''f'\'': "cdef" {
.   .   .   .   .   '\''g'\'': "cdefg"
.   .   .   .   }
.   .   .   }
.   .   }
.   }
}
$ print aa bb|trie
{
.   '\''a'\'' {
.   .   '\''a'\'': "aa"
.   }
.   '\''b'\'' {
.   .   '\''b'\'': "bb"
.   }
}
$ print ab|trie
{
.   '\''a'\'' {
.   .   '\''b'\'': "ab"
.   }
}
$ print ab abc abce abd abdz abe abez|trie
{
.   '\''a'\'' {
.   .   '\''b'\'': "ab" {
.   .   .   '\''c'\'': "abc" {
.   .   .   .   '\''e'\'': "abce"
.   .   .   }
.   .   .   '\''d'\'': "abd" {
.   .   .   .   '\''z'\'': "abdz"
.   .   .   }
.   .   .   '\''e'\'': "abe" {
.   .   .   .   '\''z'\'': "abez"
.   .   .   }
.   .   }
.   }
}
$ print ab ac|trie
{
.   '\''a'\'' {
.   .   '\''b'\'': "ab"
.   .   '\''c'\'': "ac"
.   }
}
$ print ab bb ba ccc|trie
{
.   '\''a'\'' {
.   .   '\''b'\'': "ab"
.   }
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''c'\'' {
.   .   .   '\''c'\'': "ccc"
.   .   }
.   }
}
$ print ab bb ba cde|trie
{
.   '\''a'\'' {
.   .   '\''b'\'': "ab"
.   }
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'': "cde"
.   .   }
.   }
}
$ print ab bbx ba ccc|trie
{
.   '\''a'\'' {
.   .   '\''b'\'': "ab"
.   }
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'' {
.   .   .   '\''x'\'': "bbx"
.   .   }
.   }
.   '\''c'\'' {
.   .   '\''c'\'' {
.   .   .   '\''c'\'': "ccc"
.   .   }
.   }
}
$ print ab c|trie
{
.   '\''a'\'' {
.   .   '\''b'\'': "ab"
.   }
.   '\''c'\'': "c"
}
$ print abc abce abcef abcf abcfg abcfgh abcfgi abd|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc" {
.   .   .   .   '\''e'\'': "abce" {
.   .   .   .   .   '\''f'\'': "abcef"
.   .   .   .   }
.   .   .   .   '\''f'\'': "abcf" {
.   .   .   .   .   '\''g'\'': "abcfg" {
.   .   .   .   .   .   '\''h'\'': "abcfgh"
.   .   .   .   .   .   '\''i'\'': "abcfgi"
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   .   '\''d'\'': "abd"
.   .   }
.   }
}
$ print abc abce abcef abcf abcfg abd|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc" {
.   .   .   .   '\''e'\'': "abce" {
.   .   .   .   .   '\''f'\'': "abcef"
.   .   .   .   }
.   .   .   .   '\''f'\'': "abcf" {
.   .   .   .   .   '\''g'\'': "abcfg"
.   .   .   .   }
.   .   .   }
.   .   .   '\''d'\'': "abd"
.   .   }
.   }
}
$ print abc abce abcef abcf abcfgh abcfgi abd|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc" {
.   .   .   .   '\''e'\'': "abce" {
.   .   .   .   .   '\''f'\'': "abcef"
.   .   .   .   }
.   .   .   .   '\''f'\'': "abcf" {
.   .   .   .   .   '\''g'\'' {
.   .   .   .   .   .   '\''h'\'': "abcfgh"
.   .   .   .   .   .   '\''i'\'': "abcfgi"
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   .   '\''d'\'': "abd"
.   .   }
.   }
}
$ print abc abce abcef abcf abd|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc" {
.   .   .   .   '\''e'\'': "abce" {
.   .   .   .   .   '\''f'\'': "abcef"
.   .   .   .   }
.   .   .   .   '\''f'\'': "abcf"
.   .   .   }
.   .   .   '\''d'\'': "abd"
.   .   }
.   }
}
$ print abc abcz abd abdz abe abez|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc" {
.   .   .   .   '\''z'\'': "abcz"
.   .   .   }
.   .   .   '\''d'\'': "abd" {
.   .   .   .   '\''z'\'': "abdz"
.   .   .   }
.   .   .   '\''e'\'': "abe" {
.   .   .   .   '\''z'\'': "abez"
.   .   .   }
.   .   }
.   }
}
$ print abc abd ac|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc"
.   .   .   '\''d'\'': "abd"
.   .   }
.   .   '\''c'\'': "ac"
.   }
}
$ print abc abd acde|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc"
.   .   .   '\''d'\'': "abd"
.   .   }
.   .   '\''c'\'' {
.   .   .   '\''d'\'' {
.   .   .   .   '\''e'\'': "acde"
.   .   .   }
.   .   }
.   }
}
$ print abc abd acde ac|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc"
.   .   .   '\''d'\'': "abd"
.   .   }
.   .   '\''c'\'': "ac" {
.   .   .   '\''d'\'' {
.   .   .   .   '\''e'\'': "acde"
.   .   .   }
.   .   }
.   }
}
$ print abc abd acde acfg|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc"
.   .   .   '\''d'\'': "abd"
.   .   }
.   .   '\''c'\'' {
.   .   .   '\''d'\'' {
.   .   .   .   '\''e'\'': "acde"
.   .   .   }
.   .   .   '\''f'\'' {
.   .   .   .   '\''g'\'': "acfg"
.   .   .   }
.   .   }
.   }
}
$ print abc bb ba ccc|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'': "abc"
.   .   }
.   }
.   '\''b'\'' {
.   .   '\''a'\'': "ba"
.   .   '\''b'\'': "bb"
.   }
.   '\''c'\'' {
.   .   '\''c'\'' {
.   .   .   '\''c'\'': "ccc"
.   .   }
.   }
}
$ print abcd abce ac|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'' {
.   .   .   .   '\''d'\'': "abcd"
.   .   .   .   '\''e'\'': "abce"
.   .   .   }
.   .   }
.   .   '\''c'\'': "ac"
.   }
}
$ print abcd abde abef|trie
{
.   '\''a'\'' {
.   .   '\''b'\'' {
.   .   .   '\''c'\'' {
.   .   .   .   '\''d'\'': "abcd"
.   .   .   }
.   .   .   '\''d'\'' {
.   .   .   .   '\''e'\'': "abde"
.   .   .   }
.   .   .   '\''e'\'' {
.   .   .   .   '\''f'\'': "abef"
.   .   .   }
.   .   }
.   }
}
$ print ac ab|trie
{
.   '\''a'\'' {
.   .   '\''b'\'': "ab"
.   .   '\''c'\'': "ac"
.   }
}
$ print cde cdef cdefgh|trie
{
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'': "cde" {
.   .   .   .   '\''f'\'': "cdef" {
.   .   .   .   .   '\''g'\'' {
.   .   .   .   .   .   '\''h'\'': "cdefgh"
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   }
.   }
}
$ print cde cfg cfgx cfgxy cfgxyz cfgxzzz|trie
{
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'': "cde"
.   .   }
.   .   '\''f'\'' {
.   .   .   '\''g'\'': "cfg" {
.   .   .   .   '\''x'\'': "cfgx" {
.   .   .   .   .   '\''y'\'': "cfgxy" {
.   .   .   .   .   .   '\''z'\'': "cfgxyz"
.   .   .   .   .   }
.   .   .   .   .   '\''z'\'' {
.   .   .   .   .   .   '\''z'\'' {
.   .   .   .   .   .   .   '\''z'\'': "cfgxzzz"
.   .   .   .   .   .   }
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   }
.   }
}
$ print cdef cdefg|trie
{
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'' {
.   .   .   .   '\''f'\'': "cdef" {
.   .   .   .   .   '\''g'\'': "cdefg"
.   .   .   .   }
.   .   .   }
.   .   }
.   }
}
$ print cdex cdfy cdgz cdhw|trie
{
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'' {
.   .   .   .   '\''x'\'': "cdex"
.   .   .   }
.   .   .   '\''f'\'' {
.   .   .   .   '\''y'\'': "cdfy"
.   .   .   }
.   .   .   '\''g'\'' {
.   .   .   .   '\''z'\'': "cdgz"
.   .   .   }
.   .   .   '\''h'\'' {
.   .   .   .   '\''w'\'': "cdhw"
.   .   .   }
.   .   }
.   }
}
$ print ce cdex cdfy cdgz cdhw|trie
{
.   '\''c'\'' {
.   .   '\''d'\'' {
.   .   .   '\''e'\'' {
.   .   .   .   '\''x'\'': "cdex"
.   .   .   }
.   .   .   '\''f'\'' {
.   .   .   .   '\''y'\'': "cdfy"
.   .   .   }
.   .   .   '\''g'\'' {
.   .   .   .   '\''z'\'': "cdgz"
.   .   .   }
.   .   .   '\''h'\'' {
.   .   .   .   '\''w'\'': "cdhw"
.   .   .   }
.   .   }
.   .   '\''e'\'': "ce"
.   }
}
$ print cge cfg cfgx cfgxy cfgxyz cfgxzzz|trie
{
.   '\''c'\'' {
.   .   '\''f'\'' {
.   .   .   '\''g'\'': "cfg" {
.   .   .   .   '\''x'\'': "cfgx" {
.   .   .   .   .   '\''y'\'': "cfgxy" {
.   .   .   .   .   .   '\''z'\'': "cfgxyz"
.   .   .   .   .   }
.   .   .   .   .   '\''z'\'' {
.   .   .   .   .   .   '\''z'\'' {
.   .   .   .   .   .   .   '\''z'\'': "cfgxzzz"
.   .   .   .   .   .   }
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   }
.   .   '\''g'\'' {
.   .   .   '\''e'\'': "cge"
.   .   }
.   }
}
$ print pot potato pottery tattoo tempo|trie
{
.   '\''p'\'' {
.   .   '\''o'\'' {
.   .   .   '\''t'\'': "pot" {
.   .   .   .   '\''a'\'' {
.   .   .   .   .   '\''t'\'' {
.   .   .   .   .   .   '\''o'\'': "potato"
.   .   .   .   .   }
.   .   .   .   }
.   .   .   .   '\''t'\'' {
.   .   .   .   .   '\''e'\'' {
.   .   .   .   .   .   '\''r'\'' {
.   .   .   .   .   .   .   '\''y'\'': "pottery"
.   .   .   .   .   .   }
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   }
.   }
.   '\''t'\'' {
.   .   '\''a'\'' {
.   .   .   '\''t'\'' {
.   .   .   .   '\''t'\'' {
.   .   .   .   .   '\''o'\'' {
.   .   .   .   .   .   '\''o'\'': "tattoo"
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   }
.   .   '\''e'\'' {
.   .   .   '\''m'\'' {
.   .   .   .   '\''p'\'' {
.   .   .   .   .   '\''o'\'': "tempo"
.   .   .   .   }
.   .   .   }
.   .   }
.   }
}
$ print test|trie
{
.   '\''t'\'' {
.   .   '\''e'\'' {
.   .   .   '\''s'\'' {
.   .   .   .   '\''t'\'': "test"
.   .   .   }
.   .   }
.   }
}
$ print test tests|trie
{
.   '\''t'\'' {
.   .   '\''e'\'' {
.   .   .   '\''s'\'' {
.   .   .   .   '\''t'\'': "test" {
.   .   .   .   .   '\''s'\'': "tests"
.   .   .   .   }
.   .   .   }
.   .   }
.   }
}
$ print test-str test-string test-int test-float|trie
{
.   '\''t'\'' {
.   .   '\''e'\'' {
.   .   .   '\''s'\'' {
.   .   .   .   '\''t'\'' {
.   .   .   .   .   '\''-'\'' {
.   .   .   .   .   .   '\''f'\'' {
.   .   .   .   .   .   .   '\''l'\'' {
.   .   .   .   .   .   .   .   '\''o'\'' {
.   .   .   .   .   .   .   .   .   '\''a'\'' {
.   .   .   .   .   .   .   .   .   .   '\''t'\'': "test-float"
.   .   .   .   .   .   .   .   .   }
.   .   .   .   .   .   .   .   }
.   .   .   .   .   .   .   }
.   .   .   .   .   .   }
.   .   .   .   .   .   '\''i'\'' {
.   .   .   .   .   .   .   '\''n'\'' {
.   .   .   .   .   .   .   .   '\''t'\'': "test-int"
.   .   .   .   .   .   .   }
.   .   .   .   .   .   }
.   .   .   .   .   .   '\''s'\'' {
.   .   .   .   .   .   .   '\''t'\'' {
.   .   .   .   .   .   .   .   '\''r'\'': "test-str" {
.   .   .   .   .   .   .   .   .   '\''i'\'' {
.   .   .   .   .   .   .   .   .   .   '\''n'\'' {
.   .   .   .   .   .   .   .   .   .   .   '\''g'\'': "test-string"
.   .   .   .   .   .   .   .   .   .   }
.   .   .   .   .   .   .   .   .   }
.   .   .   .   .   .   .   .   }
.   .   .   .   .   .   .   }
.   .   .   .   .   .   }
.   .   .   .   .   }
.   .   .   .   }
.   .   .   }
.   .   }
.   }
}'
) -L wide.new <(
echo '$ test -x ./trie'
test -x ./trie 2>&1 ||
echo 'command failed: test -x ./trie'

echo '$ print() { printf '\''%s\n'\'' "$@"; }'
print() { printf '%s\n' "$@"; } 2>&1 ||
echo 'command failed: print() { printf '\''%s\n'\'' "$@"; }'

echo '$ trie() { ./trie -U -w -D; }'
trie() { ./trie -U -w -D; } 2>&1 ||
echo 'command failed: trie() { ./trie -U -w -D; }'

echo '$ print a|trie'
print a|trie 2>&1 ||
echo 'command failed: print a|trie'

echo '$ print a a|trie'
print a a|trie 2>&1 ||
echo 'command failed: print a a|trie'

echo '$ print a aa b|trie'
print a aa b|trie 2>&1 ||
echo 'command failed: print a aa b|trie'

echo '$ print a ab|trie'
print a ab|trie 2>&1 ||
echo 'command failed: print a ab|trie'

echo '$ print a ab abc|trie'
print a ab abc|trie 2>&1 ||
echo 'command failed: print a ab abc|trie'

echo '$ print a ab abc abcd|trie'
print a ab abc abcd|trie 2>&1 ||
echo 'command failed: print a ab abc abcd|trie'

echo '$ print a ab abc abcd abc$'\''\xfa'\''|trie'
print a ab abc abcd abc$'\xfa'|trie 2>&1 ||
echo 'command failed: print a ab abc abcd abc$'\''\xfa'\''|trie'

echo '$ print a ab abc abd ac|trie'
print a ab abc abd ac|trie 2>&1 ||
echo 'command failed: print a ab abc abd ac|trie'

echo '$ print a ab ac|trie'
print a ab ac|trie 2>&1 ||
echo 'command failed: print a ab ac|trie'

echo '$ print a ab ac acd|trie'
print a ab ac acd|trie 2>&1 ||
echo 'command failed: print a ab ac acd|trie'

echo '$ print a ab ac ad|trie'
print a ab ac ad|trie 2>&1 ||
echo 'command failed: print a ab ac ad|trie'

echo '$ print a ab acd ace|trie'
print a ab acd ace|trie 2>&1 ||
echo 'command failed: print a ab acd ace|trie'

echo '$ print a ab b|trie'
print a ab b|trie 2>&1 ||
echo 'command failed: print a ab b|trie'

echo '$ print a abc abd ac|trie'
print a abc abd ac|trie 2>&1 ||
echo 'command failed: print a abc abd ac|trie'

echo '$ print a abcd abcdefg abcdxyz h hijk|trie'
print a abcd abcdefg abcdxyz h hijk|trie 2>&1 ||
echo 'command failed: print a abcd abcdefg abcdxyz h hijk|trie'

echo '$ print a abcd abcdefg abcdxyz h hijk hlm|trie'
print a abcd abcdefg abcdxyz h hijk hlm|trie 2>&1 ||
echo 'command failed: print a abcd abcdefg abcdxyz h hijk hlm|trie'

echo '$ print a abcd abcdefg h hijk|trie'
print a abcd abcdefg h hijk|trie 2>&1 ||
echo 'command failed: print a abcd abcdefg h hijk|trie'

echo '$ print a abd ac|trie'
print a abd ac|trie 2>&1 ||
echo 'command failed: print a abd ac|trie'

echo '$ print a b|trie'
print a b|trie 2>&1 ||
echo 'command failed: print a b|trie'

echo '$ print a b abc bac abd|trie'
print a b abc bac abd|trie 2>&1 ||
echo 'command failed: print a b abc bac abd|trie'

echo '$ print a b bb|trie'
print a b bb|trie 2>&1 ||
echo 'command failed: print a b bb|trie'

echo '$ print a b bb cc ccc ddd dddd|trie'
print a b bb cc ccc ddd dddd|trie 2>&1 ||
echo 'command failed: print a b bb cc ccc ddd dddd|trie'

echo '$ print a b c|trie'
print a b c|trie 2>&1 ||
echo 'command failed: print a b c|trie'

echo '$ print a bb ba c|trie'
print a bb ba c|trie 2>&1 ||
echo 'command failed: print a bb ba c|trie'

echo '$ print a bb ba cc|trie'
print a bb ba cc|trie 2>&1 ||
echo 'command failed: print a bb ba cc|trie'

echo '$ print a bb ba ccc|trie'
print a bb ba ccc|trie 2>&1 ||
echo 'command failed: print a bb ba ccc|trie'

echo '$ print a bb ba cde|trie'
print a bb ba cde|trie 2>&1 ||
echo 'command failed: print a bb ba cde|trie'

echo '$ print a bb ba cdef|trie'
print a bb ba cdef|trie 2>&1 ||
echo 'command failed: print a bb ba cdef|trie'

echo '$ print a bb ba cdef cdefg|trie'
print a bb ba cdef cdefg|trie 2>&1 ||
echo 'command failed: print a bb ba cdef cdefg|trie'

echo '$ print a bb bac cdef|trie'
print a bb bac cdef|trie 2>&1 ||
echo 'command failed: print a bb bac cdef|trie'

echo '$ print a bb ccc|trie'
print a bb ccc|trie 2>&1 ||
echo 'command failed: print a bb ccc|trie'

echo '$ print a bbx ba ccc|trie'
print a bbx ba ccc|trie 2>&1 ||
echo 'command failed: print a bbx ba ccc|trie'

echo '$ print a bbx bay ccc|trie'
print a bbx bay ccc|trie 2>&1 ||
echo 'command failed: print a bbx bay ccc|trie'

echo '$ print a cde cdef|trie'
print a cde cdef|trie 2>&1 ||
echo 'command failed: print a cde cdef|trie'

echo '$ print a cde cdef cdefg|trie'
print a cde cdef cdefg|trie 2>&1 ||
echo 'command failed: print a cde cdef cdefg|trie'

echo '$ print a cde cdef cdefgh|trie'
print a cde cdef cdefgh|trie 2>&1 ||
echo 'command failed: print a cde cdef cdefgh|trie'

echo '$ print a cdef cdefg|trie'
print a cdef cdefg|trie 2>&1 ||
echo 'command failed: print a cdef cdefg|trie'

echo '$ print aa bb|trie'
print aa bb|trie 2>&1 ||
echo 'command failed: print aa bb|trie'

echo '$ print ab|trie'
print ab|trie 2>&1 ||
echo 'command failed: print ab|trie'

echo '$ print ab abc abce abd abdz abe abez|trie'
print ab abc abce abd abdz abe abez|trie 2>&1 ||
echo 'command failed: print ab abc abce abd abdz abe abez|trie'

echo '$ print ab ac|trie'
print ab ac|trie 2>&1 ||
echo 'command failed: print ab ac|trie'

echo '$ print ab bb ba ccc|trie'
print ab bb ba ccc|trie 2>&1 ||
echo 'command failed: print ab bb ba ccc|trie'

echo '$ print ab bb ba cde|trie'
print ab bb ba cde|trie 2>&1 ||
echo 'command failed: print ab bb ba cde|trie'

echo '$ print ab bbx ba ccc|trie'
print ab bbx ba ccc|trie 2>&1 ||
echo 'command failed: print ab bbx ba ccc|trie'

echo '$ print ab c|trie'
print ab c|trie 2>&1 ||
echo 'command failed: print ab c|trie'

echo '$ print abc abce abcef abcf abcfg abcfgh abcfgi abd|trie'
print abc abce abcef abcf abcfg abcfgh abcfgi abd|trie 2>&1 ||
echo 'command failed: print abc abce abcef abcf abcfg abcfgh abcfgi abd|trie'

echo '$ print abc abce abcef abcf abcfg abd|trie'
print abc abce abcef abcf abcfg abd|trie 2>&1 ||
echo 'command failed: print abc abce abcef abcf abcfg abd|trie'

echo '$ print abc abce abcef abcf abcfgh abcfgi abd|trie'
print abc abce abcef abcf abcfgh abcfgi abd|trie 2>&1 ||
echo 'command failed: print abc abce abcef abcf abcfgh abcfgi abd|trie'

echo '$ print abc abce abcef abcf abd|trie'
print abc abce abcef abcf abd|trie 2>&1 ||
echo 'command failed: print abc abce abcef abcf abd|trie'

echo '$ print abc abcz abd abdz abe abez|trie'
print abc abcz abd abdz abe abez|trie 2>&1 ||
echo 'command failed: print abc abcz abd abdz abe abez|trie'

echo '$ print abc abd ac|trie'
print abc abd ac|trie 2>&1 ||
echo 'command failed: print abc abd ac|trie'

echo '$ print abc abd acde|trie'
print abc abd acde|trie 2>&1 ||
echo 'command failed: print abc abd acde|trie'

echo '$ print abc abd acde ac|trie'
print abc abd acde ac|trie 2>&1 ||
echo 'command failed: print abc abd acde ac|trie'

echo '$ print abc abd acde acfg|trie'
print abc abd acde acfg|trie 2>&1 ||
echo 'command failed: print abc abd acde acfg|trie'

echo '$ print abc bb ba ccc|trie'
print abc bb ba ccc|trie 2>&1 ||
echo 'command failed: print abc bb ba ccc|trie'

echo '$ print abcd abce ac|trie'
print abcd abce ac|trie 2>&1 ||
echo 'command failed: print abcd abce ac|trie'

echo '$ print abcd abde abef|trie'
print abcd abde abef|trie 2>&1 ||
echo 'command failed: print abcd abde abef|trie'

echo '$ print ac ab|trie'
print ac ab|trie 2>&1 ||
echo 'command failed: print ac ab|trie'

echo '$ print cde cdef cdefgh|trie'
print cde cdef cdefgh|trie 2>&1 ||
echo 'command failed: print cde cdef cdefgh|trie'

echo '$ print cde cfg cfgx cfgxy cfgxyz cfgxzzz|trie'
print cde cfg cfgx cfgxy cfgxyz cfgxzzz|trie 2>&1 ||
echo 'command failed: print cde cfg cfgx cfgxy cfgxyz cfgxzzz|trie'

echo '$ print cdef cdefg|trie'
print cdef cdefg|trie 2>&1 ||
echo 'command failed: print cdef cdefg|trie'

echo '$ print cdex cdfy cdgz cdhw|trie'
print cdex cdfy cdgz cdhw|trie 2>&1 ||
echo 'command failed: print cdex cdfy cdgz cdhw|trie'

echo '$ print ce cdex cdfy cdgz cdhw|trie'
print ce cdex cdfy cdgz cdhw|trie 2>&1 ||
echo 'command failed: print ce cdex cdfy cdgz cdhw|trie'

echo '$ print cge cfg cfgx cfgxy cfgxyz cfgxzzz|trie'
print cge cfg cfgx cfgxy cfgxyz cfgxzzz|trie 2>&1 ||
echo 'command failed: print cge cfg cfgx cfgxy cfgxyz cfgxzzz|trie'

echo '$ print pot potato pottery tattoo tempo|trie'
print pot potato pottery tattoo tempo|trie 2>&1 ||
echo 'command failed: print pot potato pottery tattoo tempo|trie'

echo '$ print test|trie'
print test|trie 2>&1 ||
echo 'command failed: print test|trie'

echo '$ print test tests|trie'
print test tests|trie 2>&1 ||
echo 'command failed: print test tests|trie'

echo '$ print test-str test-string test-int test-float|trie'
print test-str test-string test-int test-float|trie 2>&1 ||
echo 'command failed: print test-str test-string test-int test-float|trie'
)

